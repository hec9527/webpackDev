{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Basic Options */
    // "incremental": true,                   /* Enable incremental compilation */
    "target": "ES2015",                          /* 编译之后版本: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "es2015",                     /* 模块系统: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "lib": ["ES2015","DOM"],                  /* 需要使用的新特性 */
    "allowJs": true,                       /* 允许编译 .js 文件 */
    "checkJs": false,                       /* 检查 .js 文件中的错误 */
    "jsx": "preserve",                     /* 指定jsx代码用于开发环境 'preserve', 'react-native', or 'react'. */
    // "declaration": true,                   /* 编译类型申明文件 .d.ts */
    // "declarationMap": true,                /* 为类型申明添加source-map. */
    // "sourceMap": true,                     /* 为ts文件添加source-map */
    // "outFile": "./",                       /* 将输出文件合并为一个文件  **只有将module设置为amd或system的时候才支持这个配置** */
    "outDir": "./dist",                        /* 编译后输出的目录 */
    // "rootDir": "./",                       /* 编译文件的根目录，入口文件 */
    // "composite": true,                     /* 是否编译引用项目 */
    // "tsBuildInfoFile": "./",               /* Specify file to store incremental compilation information */
    // "removeComments": true,                /* 编译后的文件删除注释 */
    // "noEmit": true,                        /* 不输出文件 */
    // "importHelpers": true,                 /* 引入tslib工具函数 */
    // "downlevelIteration": true,            /* ES6部分语法的支持 */
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    // "noImplicitAny": true,                 /* Raise error on expressions and declarations with an implied 'any' type. */
    // "strictNullChecks": true,              /* Enable strict null checks. */
    // "strictFunctionTypes": true,           /* Enable strict checking of function types. */
    // "strictBindCallApply": true,           /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,  /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                  /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    // "noUnusedLocals": true,                /* Report errors on unused locals. */
    // "noUnusedParameters": true,            /* Report errors on unused parameters. */
    // "noImplicitReturns": true,             /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,    /* Report errors for fallthrough cases in switch statement. */

    /* Module Resolution Options */
    "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */  // 如果提示找不到 xx 的类型生命文件则需要打开这个选项
    // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                       /* List of folders to include type definitions from. */
    // "types": [],                           /* Type declaration files to be included in compilation. */
    "allowSyntheticDefaultImports": true,  /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": false,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "preserveSymlinks": false,              /* Do not resolve the real path of symlinks. */
    // "allowUmdGlobalAccess": true,          /* Allow accessing UMD globals from modules. */

    /* Source Map Options */
    // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
    // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
    // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
    // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

    /* Experimental Options */
    // "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    // "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */

    /* Advanced Options */
    "skipLibCheck": true,                     /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true  /* Disallow inconsistently-cased references to the same file. */
  },
  // "files": [],                           /* 可以指定编译的文件，不能使用通配符，如果没有指定 files 则查看 incluse */
//   "include": ["/src/*.ts", "/src/*.d.ts"],  /* 指定需要加载的文件，可以使用相对绝对路径、可以使用通配符、可以指定文件夹 */
//   "exclude": [],                         /* 范围同 include ，作用是排除指定文件，不编译这些文件、文件夹 /*
  // "extends": "",                            /* 字符串，指定一个配置文件的路径，指定配置文件会覆盖本文件 */
  "compileOnSave": true,                    /* 在保存后根据 config.json 重新编译 */
}
